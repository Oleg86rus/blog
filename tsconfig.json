{
  "compilerOptions": {
    "outDir": "./dist/",
    "noImplicitAny": true,
//  Подсвечивает все места, где не указан тип
//  Однако это не означает, что теперь вовсе нельзя использовать any.,
//  Это означает лишь, что в подобных ситуациях разработчик должен явно писать any
    "module": "ESNext",
//  В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
//  Позволяет компилятору обрабатывать не только TS файлы, но и JS
    "allowJs": true,
    "moduleResolution": "node",
//  Для абсолютного импорта
    "baseUrl": ".",
    "strict": true,
    "paths": {
      "@/*": ["./src/*"]
    },
    //   esModuleInterop позволяет работать с пакетами, которые используют common js как с обычными
//   пакетами с помощью import (require() module.export) = common js
    "esModuleInterop": true,
//    если библиотека не имеет default import,
//    лоадеры вроде ts-loader или babel-loader автоматически создают их,
//    вместо такого импорта,
//    import * as React from 'react',
//    получаем такой,
//    import React from 'react'
    "allowSyntheticDefaultImports": true,
    "isolatedModules": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "./config/jest/setupTests.ts",
    "./src/**/*.ts",
    "./src/**/*.tsx"
  ]
}
